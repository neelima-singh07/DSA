(* see apna cllg video for clarity   this approach uses slow and fast ptr whre slow moves one step and fast moves two steps *)
 ListNode* middleNode(ListNode* head) {
        ListNode*slow=head;
        ListNode*fast=head;
        while(fast!=NULL && fast->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;

        }
        return slow;
        
    }
