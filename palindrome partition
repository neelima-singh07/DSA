 

bool ispalindrome(string s,int st,int e){
    while(st<e){
        if(s[st]!=s[e]){
            return false;
            
        }
        st++;
        e--;
        
    }
    return true;
    
    
}
void palindrome_partition(vector<vector<string>>&ans,vector<string>&part,string s,int idx){
    if(idx==s.size()){
        ans.push_back(part);
        return;
        
    }
    //parts
    for(int i=idx;i<s.size();i++){
        
        if(ispalindrome(s,idx,i)){
            part.push_back(s.substr(idx,i-idx+1));
            palindrome_partition(ans,part,s,i+1);
            part.pop_back();
            
        }
        
    }
    
}
void f(string s){
    vector<vector<string>>ans;
    vector<string>part;
    palindrome_partition(ans,part,s,0);
    cout<<ans.size()<<endl;
    for(auto &comb:ans){
        for(auto &str:comb){
            cout<<str<<" ";
            
        }
        cout<<endl;
        
    }
    
    
}
int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--){
	    string s;
	    cin>>s;
	    f(s);
	    
	    
	    
	}
	

}
